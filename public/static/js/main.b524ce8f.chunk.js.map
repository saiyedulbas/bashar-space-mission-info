{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","style","background","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","color","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","width","height","display","margin","target","href","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b524ce8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f3ad5740.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\n}) {\n  return (\n    <div className=\"card card-body mb-3\" style={{ background: '#2a0f66' }}>\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{' '}\n            <span\n              className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p style={{ color: '#1a1818' }}>\n        <span className=\"px-3 mr-2 bg-success\"  /> = Success\n      </p>\n      <p style={{ color: '#1a1818' }}>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n      </p>\n    </div>\n  );\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\" style={{ color: '#1a1818' }}>Bashar's Space Mission Info App</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            return (\n              <Fragment>\n                {data.launches.map(launch => (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                ))}\n              </Fragment>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launches;\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nexport class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n\n            return (\n              <div>\n                <h1 className=\"display-4 my-3\" style={{ color: '#1a1818' }}>\n                  <span>Mission:</span> {mission_name}\n                </h1>\n                <h4 style={{ color: '#1a1818' }} className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\" >\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>\n                    Launch Successful:{' '}\n                    <span\n                      className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                      })}\n                    >\n                      {launch_success ? 'Yes' : 'No'}\n                    </span>\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\" style={{ color: '#1a1818' }}>Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>Rocket ID: {rocket_id}</li>\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\" style={{ background: '#2a0f66' }}>\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launch;\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX\"\n              style={{ width: 300, height: 215, display: 'block', margin: 'auto' }}\n            />\n\t\t\t<a target=\"_blank\" className=\"btn btn-danger mr-2\" href=\"https://bashar-space-document.herokuapp.com/index.html\">Documentation</a>\n\t\t\t<a target=\"_blank\" className=\"btn btn-danger mr-2\" href=\"https://www.youtube.com/watch?v=EPpy9UX-R6s&t=402s\">Site Tour</a>\n\t\t\t<a target=\"_blank\" className=\"btn btn-danger mr-2\" href=\"https://findbashar.com/\">Bashar's Portfolio</a>\n\t\t\t<p className=\"btn btn-success mt-3\">For any query, just contact Bashar at 01834663387</p>\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}